{
    "info": {
        "offer_name": "Uusi tarjous",
        "filepath": "C:\\Users\\Cosa Dove Ky\\Desktop\\Uusi kansio\\koodi\\ttk-py\\Uusi tarjous.json",
        "first_name": "",
        "last_name": "",
        "address": "",
        "data": {
            "field_count": {
                "Kaappi": {
                    "mult": 8.0,
                    "count": 4,
                    "total": 26.0
                },
                "Testiyksikk\u00f6": {
                    "mult": 4.0,
                    "count": 2,
                    "total": 24.4
                }
            },
            "use_global": true
        }
    },
    "groups": [
        {
            "name": "Uusi ryhm\u00e4",
            "predefs": [],
            "materials": [],
            "products": [
                {
                    "code": "Kaappi",
                    "edited": "E",
                    "count": 1,
                    "group": "Kaappi",
                    "desc": "Testi Kaappi 01",
                    "prod": "Kappien valmistaja",
                    "x": 620,
                    "y": 600,
                    "z": 750,
                    "work_time": 1.0,
                    "work_cost": 20.0,
                    "part_cost": 0.0,
                    "tot_cost": 20.0,
                    "inst_unit": "Kaappi",
                    "code_edited": "db.get_edited(self.get_edited_filter(obj))",
                    "code_part_cost": "obj['parts'].sum('cost')",
                    "code_tot_cost": "(obj['work_time'] * obj['work_cost']) + obj['part_cost']",
                    "parts": [
                        {
                            "code": "sivu",
                            "desc": "",
                            "use_predef": "",
                            "mat": "",
                            "use_mat": "",
                            "x": 0,
                            "y": 0,
                            "z": 0,
                            "cost": 0.0,
                            "code_use_mat": "osd['predefs'].find('part', obj['code'], 'mat') if self.is_true(obj['use_predef']) else obj['mat']",
                            "code_x": "0",
                            "code_y": "0",
                            "code_z": "0",
                            "code_cost": "obj['x'] * obj['y'] * osd['materials'].find('code', obj['use_mat'], 'cost')"
                        },
                        {
                            "code": "tausta",
                            "desc": "",
                            "use_predef": "",
                            "mat": "",
                            "use_mat": "",
                            "x": 0,
                            "y": 0,
                            "z": 0,
                            "cost": 0.0,
                            "code_use_mat": "osd['predefs'].find('part', obj['code'], 'mat') if self.is_true(obj['use_predef']) else obj['mat']",
                            "code_x": "0",
                            "code_y": "0",
                            "code_z": "0",
                            "code_cost": "obj['x'] * obj['y'] * osd['materials'].find('code', obj['use_mat'], 'cost')"
                        },
                        {
                            "code": "hylly",
                            "desc": "",
                            "use_predef": "",
                            "mat": "",
                            "use_mat": "",
                            "x": 0,
                            "y": 0,
                            "z": 0,
                            "cost": 0.0,
                            "code_use_mat": "osd['predefs'].find('part', obj['code'], 'mat') if self.is_true(obj['use_predef']) else obj['mat']",
                            "code_x": "0",
                            "code_y": "0",
                            "code_z": "0",
                            "code_cost": "obj['x'] * obj['y'] * osd['materials'].find('code', obj['use_mat'], 'cost')"
                        }
                    ]
                },
                {
                    "code": "Kaappi",
                    "edited": "E",
                    "count": 3,
                    "group": "Kaappi",
                    "desc": "Testi Kaappi 01",
                    "prod": "Kappien valmistaja",
                    "x": 620,
                    "y": 600,
                    "z": 750,
                    "work_time": 1.0,
                    "work_cost": 20.0,
                    "part_cost": 0.0,
                    "tot_cost": 20.0,
                    "inst_unit": "Kaappi",
                    "code_edited": "db.get_edited(self.get_edited_filter(obj))",
                    "code_part_cost": "obj['parts'].sum('cost')",
                    "code_tot_cost": "(obj['work_time'] * obj['work_cost']) + obj['part_cost']",
                    "parts": [
                        {
                            "code": "sivu",
                            "desc": "",
                            "use_predef": "",
                            "mat": "",
                            "use_mat": "",
                            "x": 0,
                            "y": 0,
                            "z": 0,
                            "cost": 0.0,
                            "code_use_mat": "osd['predefs'].find('part', obj['code'], 'mat') if self.is_true(obj['use_predef']) else obj['mat']",
                            "code_x": "0",
                            "code_y": "0",
                            "code_z": "0",
                            "code_cost": "obj['x'] * obj['y'] * osd['materials'].find('code', obj['use_mat'], 'cost')"
                        },
                        {
                            "code": "tausta",
                            "desc": "",
                            "use_predef": "",
                            "mat": "",
                            "use_mat": "",
                            "x": 0,
                            "y": 0,
                            "z": 0,
                            "cost": 0.0,
                            "code_use_mat": "osd['predefs'].find('part', obj['code'], 'mat') if self.is_true(obj['use_predef']) else obj['mat']",
                            "code_x": "0",
                            "code_y": "0",
                            "code_z": "0",
                            "code_cost": "obj['x'] * obj['y'] * osd['materials'].find('code', obj['use_mat'], 'cost')"
                        },
                        {
                            "code": "hylly",
                            "desc": "",
                            "use_predef": "",
                            "mat": "",
                            "use_mat": "",
                            "x": 0,
                            "y": 0,
                            "z": 0,
                            "cost": 0.0,
                            "code_use_mat": "osd['predefs'].find('part', obj['code'], 'mat') if self.is_true(obj['use_predef']) else obj['mat']",
                            "code_x": "0",
                            "code_y": "0",
                            "code_z": "0",
                            "code_cost": "obj['x'] * obj['y'] * osd['materials'].find('code', obj['use_mat'], 'cost')"
                        }
                    ]
                },
                {
                    "code": "Kaappi",
                    "edited": "E",
                    "count": 2,
                    "group": "Kaappi",
                    "desc": "Testi Kaappi 01",
                    "prod": "Kappien valmistaja",
                    "x": 620,
                    "y": 600,
                    "z": 750,
                    "work_time": 1.0,
                    "work_cost": 20.0,
                    "part_cost": 0.0,
                    "tot_cost": 20.0,
                    "inst_unit": "Testiyksikk\u00f6",
                    "code_edited": "db.get_edited(self.get_edited_filter(obj))",
                    "code_part_cost": "obj['parts'].sum('cost')",
                    "code_tot_cost": "(obj['work_time'] * obj['work_cost']) + obj['part_cost']",
                    "parts": [
                        {
                            "code": "sivu",
                            "desc": "",
                            "use_predef": "",
                            "mat": "",
                            "use_mat": "",
                            "x": 0,
                            "y": 0,
                            "z": 0,
                            "cost": 0.0,
                            "code_use_mat": "osd['predefs'].find('part', obj['code'], 'mat') if self.is_true(obj['use_predef']) else obj['mat']",
                            "code_x": "0",
                            "code_y": "0",
                            "code_z": "0",
                            "code_cost": "obj['x'] * obj['y'] * osd['materials'].find('code', obj['use_mat'], 'cost')"
                        },
                        {
                            "code": "tausta",
                            "desc": "",
                            "use_predef": "",
                            "mat": "",
                            "use_mat": "",
                            "x": 0,
                            "y": 0,
                            "z": 0,
                            "cost": 0.0,
                            "code_use_mat": "osd['predefs'].find('part', obj['code'], 'mat') if self.is_true(obj['use_predef']) else obj['mat']",
                            "code_x": "0",
                            "code_y": "0",
                            "code_z": "0",
                            "code_cost": "obj['x'] * obj['y'] * osd['materials'].find('code', obj['use_mat'], 'cost')"
                        },
                        {
                            "code": "hylly",
                            "desc": "",
                            "use_predef": "",
                            "mat": "",
                            "use_mat": "",
                            "x": 0,
                            "y": 0,
                            "z": 0,
                            "cost": 0.0,
                            "code_use_mat": "osd['predefs'].find('part', obj['code'], 'mat') if self.is_true(obj['use_predef']) else obj['mat']",
                            "code_x": "0",
                            "code_y": "0",
                            "code_z": "0",
                            "code_cost": "obj['x'] * obj['y'] * osd['materials'].find('code', obj['use_mat'], 'cost')"
                        }
                    ]
                }
            ]
        }
    ]
}